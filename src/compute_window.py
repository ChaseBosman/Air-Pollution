from tkinter import *
from calculation import Calculation


class ComputeWindow(Toplevel):
    def __init__(self):
        self.top = Toplevel.__init__(self)
        self.geometry("600x250")

        # define an object to hold user calculations, eventually implement to be expandable
        self.user_calculation = Calculation()

        # call method to create widgets
        self.create_widgets()
        self.display_widgets()

    def create_widgets(self):
        # header
        self.header_label = Label(self, text="Compute carbon footprint levels")

        self.instruct_label = Label(self, text="Enter the following information:")
        self.miles_label = Label(self, text="Miles driven per year:")
        self.propane_label = Label(self, text="Propane used per year")
        self.kwh_label = Label(self, text="KWh used per year")
        self.therms_label = Label(self, text="Therms used per month")
        self.mcf_label = Label(self, text="MCF used per month")

        self.miles_entry = Entry(self)
        self.propane_entry = Entry(self)
        self.kwh_entry = Entry(self)
        self.therms_entry = Entry(self)
        self.mcf_entry = Entry(self)

        # calculate the data entered in the above entries
        self.calculate_but = Button(self, text="calculate", command=lambda: self.calculate(), width=10, height=2)

        # Display the results
        self.results_label = Label(self, text="Results:")
        self.miles_result = Entry(self)
        self.propane_result = Entry(self)
        self.kwh_result = Entry(self)
        self.therms_result = Entry(self)
        self.mcf_result = Entry(self)

    def display_widgets(self):
        # header
        self.header_label.grid(row=0, column=1, columnspan=15, pady=8)

        self.instruct_label.grid(row=1, column=0, sticky=E)
        self.miles_label.grid(row=2, column=0, sticky=E)
        self.propane_label.grid(row=3, column=0, sticky=E)
        self.kwh_label.grid(row=4, column=0, sticky=E)
        self.therms_label.grid(row=5, column=0, sticky=E)
        self.mcf_label.grid(row=6, column=0, sticky=E)

        self.miles_entry.grid(row=2, column=1, columnspan=15)
        self.propane_entry.grid(row=3, column=1, columnspan=15)
        self.kwh_entry.grid(row=4, column=1, columnspan=15)
        self.therms_entry.grid(row=5, column=1, columnspan=15)
        self.mcf_entry.grid(row=6, column=1, columnspan=15)

        # calculate the data entered in the above entries
        self.calculate_but.grid(row=7, column=1, pady=8, columnspan=15)

        # results, given in an entry box for looks
        self.results_label.grid(row=1, column=30, columnspan=15)
        self.miles_result.grid(row=2, column=30, columnspan=15)
        self.propane_result.grid(row=3, column=30, columnspan=15)
        self.kwh_result.grid(row=4, column=30, columnspan=15)
        self.therms_result.grid(row=5, column=30, columnspan=15)
        self.mcf_result.grid(row=6, column=30, columnspan=15)

    def calculate(self):
        # self.set_entry_value( entry to insert data into, value to insert into entry generated by calculation.py)
        self.set_entry_value(self.miles_result, self.user_calculation.convert_fuel_oil(float((self.miles_entry.get()))))
        self.set_entry_value(self.propane_result, self.user_calculation.propane(float((self.propane_entry.get()))))
        self.set_entry_value(self.kwh_result, self.user_calculation.convert_electricity(float((self.kwh_entry.get()))))
        self.set_entry_value(self.therms_result,
                             self.user_calculation.convert_nat_gas_therms(float((self.therms_entry.get()))))
        self.set_entry_value(self.mcf_result, self.user_calculation.convert_nat_gas_mcf(float((self.therms_entry.get()))))

    @staticmethod
    def set_entry_value(result_entry, value):
        result_entry.delete(0, END)
        result_entry.insert(0, value)

